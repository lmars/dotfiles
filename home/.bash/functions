# Courtesy of Carles Fenollosa <carles.fenollosa@bsc.es>
# Retrieved from http://mmb.pcb.ub.es/~carlesfe/unix/tricks.txt
function psgrep() {
  ps axuf | grep -v grep | grep "$@" -i --color=auto;
}

# Print the syntax for escaped colour sequences.
#
# Courtesy of http://blog.edwards-research.com/2012/03/script-to-show-all-fontbackground-colors-in-bash/

function colours() {
  local reset="\033[0m"
  local tag=""

  for colour in $(seq 30 40) ; do
    for style in 0 1 4 5 7; do
      tag="\033[${style};${colour}m"

      echo -ne $tag
      echo -n "${tag}TEXT${reset}"
      echo -ne "${reset}  "
    done
    echo
  done
}

function prepend_to_path() {
  local path=$1

  if [[ ":${PATH}:" != *:"${path}":* ]]; then
    export PATH="${path}:${PATH}"
  fi
}

function prepend_to_manpath() {
  local path=$1

  if [[ ":${MANPATH}:" != *:"${path}":* ]]; then
    export MANPATH="${path}:${MANPATH}"
  fi
}

function print_error() {
  local msg=$1

  echo -e "\033[0;31m${msg}\033[0m"
}

# Preview Github markdown styled with Bootstrap
function md_preview() {
  local file=$1
  local css="http://netdna.bootstrapcdn.com/bootswatch/3.0.0/united/bootstrap.min.css"

  if ! which -s marked; then
    print_error "marked missing; run npm install marked"
    return 1;
  fi

  if ! which -s browser; then
    print_error "browser script missing; run brew install browser"
    return 2;
  fi

  if [ -z $file ]; then
    print_error "Usage: md_preview FILE"
    return 3;
  fi

  if [ ! -f $file ]; then
    print_error "No such file: ${file}"
    return 4;
  fi

  echo "<html><head><title>${file}</title><link rel="stylesheet" href="${css}"></head><body><div class="container">$(marked -i ${file})</div></body></html>" | browser
}
