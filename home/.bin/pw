#!/usr/bin/env ruby
# A script for storing secrets in the default GNOME keyring
#
# Uses the python gkeyring script:
# https://github.com/kparal/gkeyring

def error(msg)
  $stderr.puts msg
  exit 1
end

unless system('which gkeyring >/dev/null')
  error <<-ERROR

This script relies on gkeyring.

Download and add it to your PATH:
https://github.com/kparal/gkeyring
ERROR
end

name, secret = ARGV[0..1]

def usage
  error <<-USAGE

Usage: #{File.basename $0} [-l] [-g] name [secret]

args:
  -l              List names of all secrets
  -g              Generate a random secret
  -g name         Generate a random secret for the name
  name            Get the secret stored with name
  name secret     Set the secret for the name
USAGE
end

unless name
  usage
end

def get(name)
  `gkeyring -p type=pw,name=#{name} -o secret`.strip
end

def get_all
  `gkeyring -p type=pw -o name`.split("\n").map(&:strip)
end

def set(name, secret)
  existing = get(name)

  unless existing.empty?
    error "#{name} already exists"
  end

  if system("gkeyring --set --name #{name} -p type=pw,name=#{name} -w #{secret} >/dev/null")
    puts 'OK'
  else
    error "Couldn't set #{name}"
  end
end

if name == '-l'
  puts get_all.join("\n")
elsif name == '-g'
  require 'securerandom'
  name   = secret
  secret = SecureRandom.hex

  if name
    set(name, secret)
  else
    puts secret
  end
elsif secret
  set(name, secret)
else
  secret = get(name)

  if secret.empty?
    error "Couldn't find #{name}"
  else
    puts secret
  end
end
